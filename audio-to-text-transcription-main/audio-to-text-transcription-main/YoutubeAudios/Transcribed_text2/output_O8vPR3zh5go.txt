 In the last lecture, we had concluded with a term called algorithm. And we said that an algorithm means a sequence of steps that are followed to solve a problem, to be followed to solve a problem. Now, the question is that how do we express an algorithm? How do we express the sequence of steps? How do we express that? There can be different ways of expressing it. So, usually ultimately we will have to write a program for this. Ultimately we will have to write a program for this. So, obviously program is the final form of expression of the sequence of steps that we want to reach to. But even before that, I mean a program is for communicating the sequence of steps to a computer. But even for our human exchange, we may like to express what are the steps to be followed. And the two distinct ways by which an algorithm can be expressed, one is flow chart, another is pseudo code. Now, flow chart as the name implies is a diagrammatic representation of the sequence of steps. It is a diagram. And pseudo code on the other hand is an English like English or whatever in human language, English like not exactly English, we can take a lot of liberty, we will see how to when I express the sequence of steps, English like language to express the sequence of steps. Now, we will show both the flow chart and pseudo code with respect to some of the problems that we had discussed earlier. So, let us start with this, finding the average of three numbers. This is the simplest possible way, simplest possible problem that we can solve. So, we will start with the first, we will start with the start node, we are trying to draw a flow chart. So, once we draw this start, then next will be some assign 0. Now, what all of us know that in order to find the average of any number, set of numbers, we have to first add those numbers. So, the addition result is stated as sum. So, here when there is no number that has been, we have already taken into account, we initialize the sum to be 0. So, right now sum is 0. Next, what we do is, we read the first number, we read the first number, read number 1. Now, what does this read mean? Read means who is reading? Whom do you want to read? Whoever, whoever will be finding the average, he or she will have to read the number. If I ask a human being to do that, the human being will have to know the number. So, if I show that number on a piece of paper writing 5, he will read that number 5 and we will say, okay, so 5 is the first number. Then I show the second number, 7, okay, 7 is the second number. In that way, that is the significance, that is the meaning of this read. Now, in our case, ultimately, ultimately, the computer will read it. And earlier, we had talked about the input and often we had discussed about this, this is also known as an input mechanism. So, it is reading the number. Now, here, I would like to state a few things, that is, say, flow chart has got some basic fundamental elements. This one you have already seen, that is a start symbol, okay. Now, this figure is known as oblong. This figure is rectangle. Now, this oblong is actually used for input and output, I mean, specification. Wherever I need to do some input or the system provides me some output, let me explain this. So, input I have already explained that when I am writing some number for you to read or for anybody who will do the computation to read, that is the input. And you know all of you that we have got some input devices, the most standard input devices the keyboard using which we can put in the data. The output is after the computation is done, the system will or system will give me the output. Or if it be a human being who is doing the computation, he or she will be telling me the output, that this is the result. So, that is known as output. So, while drawing the flow chart, sometimes we will write read for this input and maybe print or write, print or write for output, okay. Now, this diagram is essentially the computation box. So, whenever we do some computation that we show in this sort of a box. For example, we can say x is p multiplied by q, something like this or the other very important block is the decision blocks block, which looks like this a diamond. Now, here what we do, we just take decisions depending on some conditions, depending on some conditions, I will either take the left path or the right path, okay. So, for example, I can say whether the age of a boy is greater than 14. If the age of the boy is not greater than 14, he is not allowed to go to a film, okay. So, if it be no, then he cannot go to a to see a particular film. And if it be 14 or greater, that means it is greater than 14, if it is yes, then he can go to a film. So, we come to this particular point and make a decision looking at this sort of scenario. So, this is known as the decision box. Now, these are the basic four elements of any flow chart, all right. So, now we will again come back to our flow chart. So, you can see here that some is 0 and the number that has been read is the first number, right. Now, suppose that number that was read, the number that was read is 5. Suppose, I the number that I read is 5. So, some number. So, next what I do is I add that particular number with the sum. So, now it the sum was initially 0. So, I add 5 with sum. So, it becomes the total sum becomes 5, right. Sum becomes 5. So, next what should I do? After I computed the sum, then I read the second number because I have to read three numbers and find the average. I read the second number and then I add the second number with the sum. The first number was 5. So, the value of sum is now 5, value of sum is now 5. I have read the second number. Suppose that was 8, then the sum becomes 8 plus 5 that is 13. Now, I come and read the third number. Suppose it is 3, all right. So, I read the third number and then I compute the sum. So, I have computed 3 the sum to be 13 plus 3 16. Next, what do I do? I have to compute the average. So, what I do? I find the AVG is by AVG, I am depicting the average. Average is sum divided by 3, okay. So, it was what was it? 13 plus 3, 16 divided by 3. So, it will be 5 points something. So, that result whatever I get that I will be printing. So, that is a flow chart. These are the steps that I have to do, okay. Now, the same thing, the same thing I can express in the form of a pseudo code or English like language. Let us see how it looks like. Here, you just see what I have done. I have initialized what I wrote in the first step is this one is equivalent to this, all right. Initialize the sum to 0 and then I read the first number. Sum is added sum equals sum plus number 1 exactly what I did here. Read the second number then I sum equals sum plus number 2 and then I read the third number and then sum is sum plus number 3. So, these are the steps. You see exactly if you just do not look at the left part of the whole thing if you just look at this right part you can also understand what are the steps through which I must go, okay. And so, ultimately I compute the average which is I just write. So, it is English like compute have AVG equal. So, it is not exactly English it is English like anybody who knows English will be able to understand this. So, this is known as the pseudo code. So, this is for the very simple problem that we are doing. Now, suppose let us think of for a second that suppose instead of three numbers I asked you to find the average of 10 numbers. How the flow chart look like? Obviously, this same thing that I have done here read number 3, read number 4, read number 5, read number 6 in that way it will go on and on and on, okay. Had it been 100 numbers then it would be even larger, okay. Now, can we do something better in order to I do not have so much paper to waste. So, can I write it, can I express it in a much better way? So, let us go to the next problem where we want to find the average of N numbers, average of N numbers I want to find out. So, the first thing will be again start that is from where I am starting next is read the value of N. So, what is this value of N? Now, if I say this value of N when I read what is this N? This N is telling me how many numbers I will be considering for finding the average is it 100, is it 1000, is it 10, whatever. So, I am that is N. So, I am reading the value of N, okay. Now, I am initializing the sum to 0. Again just as before I initialize the sum to 0 and then I read, now you see here I have written read number. I have not written read number 1. Earlier since I had to only do number 1, 2 and 3 here there I wrote down number 1, number 2, number 3 here I am just writing read number, okay. Because I do not know how many numbers I will be reading. The reason will be very clear soon. So, next what do I do? I read the number this sum is sum plus number. So, I take the sum was 0, I take the sum and add that number which number the number that I just now read. Say I have just now read number 5, okay. I have read just now, I am sorry, I just read number 5. So, I read number 5 and I have added that number with sum. So, sum is now 5, okay. Next I decrement this is a new thing that is coming up here. Since I know here at this point the user or the whoever supplied the data told me that you have to look for 100 numbers say, N is 100, I have learnt that. So, now here I have read one number and I have taken care of that number because I have added that with sum and so therefore, I now decrement that value of N. What does this signify? This signifies that I now since initially it was 100, I have to read 99 more numbers 99 or yet to go, right. Now, I have to check have I read all the numbers? What is the value of N? The value of N is 99 that means, N is not 0 that means, I have not been able to read all the numbers. If I have since in a decision box as I have told you just a couple of minutes earlier that I can have two options, I can either have yes or no answer. If N is equal to 0, what does that signify? If N is equal to 0 that signifies that I have read all the numbers, I have already read all the numbers. Then I compute then I can compute the average as sum whatever sum I got divided by N. Otherwise, if N is not equal to 0 then let us look at here, if N is not equal to 0, no then I will go back here again look at this part. I will go back here again and read number. I will read the second number read that and add it to sum I will go over here decrement. So, I have read two numbers. So, now how many are yet to go? 98, N is 0, no, N is not 0, N is not 0. So, I go up again I read another number add that particular number to the sum, decrement N how many to go? 97 is it 0? No, not 80. So, I go on in this way. I will go on in this way ultimately after I have read the hundredth number this N will become 0. So, at that point I will come to this average and compute the average as sum divided by N and then I will print the average and stop. So, see just by this thing I am sorry just by this thing which is nothing but this is called a loop. This is called a loop and using this looping repetition I could reduce the length of the flow chart, the repetition of the flow chart in a very elegant way. I hope it is clear. So, the same thing can be also reflected in the flow chart. Now, compared to the with the earlier flow chart, earlier statement here when I read it only for three numbers I did initialize sum to 0 read number 1, read number 2 and at every point I was adding it to sum. Here what I do is I write it in a little bit flexible way because when I write in a pseudo code I am not very constrained. I can take the flexibility as long as I can express myself it is good enough. I just wrote get the value of N earlier probably I wrote read the value of N means the same thing. So, get the value of N initialize sum to 0 and till now here I am talking of this looping till N is as long as till means as long as N is greater than 0 it will be better to say as long as N is greater than 0 read number at the number red the number that you have red to sum. You read number at the number red to sum and one thing I missed out here and you decrement N. You decrement N here you have to make N equal to N minus 1. In your note you please take it down here it will be N, N minus 1 and so till N as long as N is greater than 0 I will be going on doing this. After that I will compute average as average divided by sum average is sum divided by N I am sorry and then I will print the average. So, I can express it either in the form of flow or in the form of a pseudo code. Now, let us take up I mean it is not very visible here finding the maximum of 3 numbers that was another problem that we had discussed last time. What I am trying to do is I am trying to find the maximum of 3 numbers. So, how can I go about in doing the flow chart. So, I start just 3 numbers not a large set of numbers. I first read the number number 1. Now, tell me one thing when you have first read one number, what is the maximum number? Obviously since you have read only one number that itself is the maximum only one. So, it is a singleton so it is the maximum. Therefore, I say that max is nothing, but the first number the number that I have read max is number 1. Now, I read the second number I read the second number. Now, which one is the maximum? If the second number is greater than the first number then the second number will be the max. Now, when I read the first number when I read the first number here I said that to be the max. So, now after reading the second number I can compare the second number with respect to the max. If the second number is greater than the max, if the second number is greater than the max then what will happen? Then number 2 will be the max. If it is yes then number 2 becomes the max and if no that means what? Number 2 is not greater than the max then I skip this part. I skip this part and go out by this way skipping this part that means at this point which the max obviously at this point I had number 1 and number 1 is still the max. I hope it is clear. Next I read the third number. Again, I do the same thing after reading the third number. Is the third number greater than? What? Number 2 should I compare? No. I should compare with the max because till now between number 1 and number 2 whatever is the maximum I have already remembered that in max. So, I read the number 3 and then again compare is number 3 greater than max. I can have yes or no. So, if it be yes then number 3 becomes the max because number 3 is greater than the maximum number till now. And then I will proceed and if not if number 3 is not greater than max then I then obviously the whatever was the max till now that is the number 1 that will remain the max. Think of number 1 to be 5 number 2 to be 3 and number 3 to be 1. What will happen? 3. So, max is 3 sorry this was 5. So, I read 5. Next I read 3 is 5 greater than 3? No. So, I kept 5 as the maximum alright. I read number 3 that was 1. I compared is it greater than the maximum which was 5? No. Then I print that 5 which is the maximum. But if suppose number 3 was 7. So, it is greater than 5. So, then I can go here and update this max to be number 3 or the 7. And then I come to the print max part. So, this is the flow chart of finding the maximum of 3 numbers. And consequently you can see the pseudo code of this start read first number. Then I assign max to be the first number. Then I read the second number assign. Now, if number red is greater than max then I will make the max to be number 2. If the number red, if the if badly written read number it is wrong. If number 2 is greater than max then make max number 2. Then read number 3. If number 3 is greater than max then make max number 3. Otherwise you are continuing. So, if number 2 is not greater than max then I am reading number 3. I am not doing this part. This is another way of explaining the pseudo code. So, the same thing. Now, we come to another variety of this finding the maximum for n positive integers. Here I have taken a little liberty. The finding the maximum of n positive integers. Earlier I was doing it for all numbers, but just as a change. So, let us see. I read n again. n means the number of numbers that I want to read. Now, I set max to 0. Why do I set max to 0? Because I am trying to find the max of n positive integers. So, any positive integer will be greater than or equal greater than 0. So, I am putting that max to the minimum value possible and then I am reading a number. I read a number and if that number is greater than max, if that number is greater than max which is by default 0. I have kept it at the bottom most possibility. In all unless that number is 0 it will always be greater. So, I will set that number to be the max. Next, again you remember what I did for finding the average? I reduce the value of n. Suppose I had to do find the max of 10 numbers. So, n becomes now 9 and then I check. I if the max sorry this is mistake here. This arrow, this arrow should come from this point. This arrow should come from this point. So, I am just drawing it here. I am drawing it here. It should come like this. So, I have read a particular number and then if that number, if that particular number is greater than max, I am sorry, I read a number and if that number is greater than max, number is greater than max, then I will if it is true, then I will make that number to be the max. Max will be that particular number and then I check n, I have already read n. So, is n 0, then I have read one number and then I reduce n just as I did in the earlier case and then I check. n greater than 0, if yes, then I have to go back, I have to go back and again read a number. Read num and this will go on as long as n is greater than 0. If n is greater than is not greater than 0, no, then I will come and print the max. So, there was a little error in that diagram which will be so, you can see that this line should have come from here, here is n 0, yes, then print max. Otherwise, this should have come from this point, this should have come from this point, this is wrong. So, in this way, we can again find the max for n numbers, it is a flow chat. So, again I can have the pseudo code for this. So, the pseudo code for this is shown here, read the value of n, here initialize max to 0, till until n is 0, read the number, if number is greater than max, max is equal to number, decrement n, n is n minus 1 and then it will be not 1 here, it will be again print the max. So, in that way, you have seen examples of some intermediate representation of the sequence of steps or the algorithms. We will encounter a number of algorithms in the course of these lectures and the next point, next step we will see what is to be done in order that this sequence of steps can be converted, can be transferred to a computer language, so that the computer can solve the problem, that we will see in the next part.