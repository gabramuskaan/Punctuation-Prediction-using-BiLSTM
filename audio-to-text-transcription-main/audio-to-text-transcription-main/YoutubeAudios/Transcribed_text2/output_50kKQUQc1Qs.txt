 So, we saw a program where we are finding the minimum of a set of 10 numbers. So, here the program is restricted as you can see to 10 numbers and accordingly I have declared the array A to be of size 10 and also this iteration values are also iteration limit has been kept to 10. Now, when we did that just a quick recapitulation of what we did in the last lecture that here is the array declaration and this is where we are accessing the array elements. Here you can see I am accessing the array element A i a particular array element here and assigning that to another variable mean. Now, here is very important how I am by reading the element. Now, since an array consists of a number of elements sorry the since the array consists of a number of elements I have to read them in a loop that is a very fundamental thing that you want to should understand that at a time I cannot read the entire array in one short except for the case where I initialize it and when I declared that I give in A so and so values within curly bracket that is one way. But, if you have to do it at runtime that means whenever you are asking the program is running and you are asking from the user that you enter the values then you have to take one bit of value at a time just like this and store it in the array. So, that has to be done in a loop for by varying this indexes one of another as the index moves I load the different locations with the values. Now, given this we can have an alternate version of the same program you can see that here we have added one line that is this line define size 10 this is again the use of has defined that we had learnt when we defined pi to be 3 point we had encountered this we had encountered this define pi 3 point 1 4 etcetera. So, similarly here I am defining size a variable size to have the value 10. Therefore, I now can write this dimension as size now please note that the compiler look at it from the angle of the compiler the compiler will try to allocate some memory location some amount of memory location. Now, if there be a variable size it really does not know how much memory location to allocate but since I have defined it earlier it now knows size means 10. So, it will replace in size with in size sorry in A size to be in a size 10. So, this is the size 10, so now next thing you do is wherever I had I less than 10 I make it size I less than size here also for the for loop I make I less than size why did I do that what is the advantage of doing it now suppose you have got this program and how many places is size being used in 1 2 3 places in another program it could have been used in more number of places here we have not printed the array I have only printed the minimum. So, there could be more places where size could be used now now suppose I want to modify this program I reuse this program for an array of size 100 only thing I need to do is I change this 10 to 100 and please note that after define any hash defined does not have a semicolon because these are not part of the program these are commands to the compiler or preprocessing commands. So, if I could make it 100 then this would be replaced by 100 it would be A 100 and here it should be I less than 100 automatically I less than 100 I need not change it at all the places that is the advantage of the hash defined. We change we can change only one line to change the problem size the problem size from 10 to 100 to 1000 we can change by just changing one line here is another version of the program here we have not defined hash defined but I have kept a large size 100 now so I have got an array space of 100 elements 100 elements so much space is kept for me by the array of this line now what I am doing is I am asking from the user you please tell me how many elements you are going to input suppose here and that I am taking as a variable n n is a variable where I am just asking the user give the number of elements n and when the user is typing say 25 then that goes as n so out of this 25 is of course less than the size of this which is 100 is less than that. So, now I will just work not for 100 elements but for 25 elements why because the user has already told me that I want to input 25 elements therefore what modification should I do again here I want to make it interactive so I again tell the user on the screen you will see this message input all in integers and the user is entering them one after another okay he can type in 25 enter 35 enter 42 enter like that or he can give space and go on typing that so for I less than 0 to n now what is n n is 25 so now it is for I to I 0 to 25 I read the number so I will be doing 25 numbers here 5 20 16 12 9 etcetera etcetera I go on and I will go up to 25 not 100 all these so this space will be wasted this is a wasted space why wasted space because I had reserved 100 locations but the user has just agreed to give only 25 numbers and then the remaining part remains the same here also I will be dealing with n why n I will be at 100 boom and the market is 8 actually I know the market I lost this market for FDA can wear this market because here I have made this world for this basic market and I am going to give only some things one should not be shown as the market. again I will be searching. So, when I did this the array that I got is actually although they were 200 elements the array was actually of 25 elements right the array was of 25 elements. So, I will have to find the minimum within this zone and I did not go here. So, that is another version of the same program. So, here what is done is we define an array of largest size and only use the required amount out of that. Now, let us do a programming ourselves. Suppose I want to read the sum integers and I want to find out the sum of all the integers that old example that we had done earlier. How did you do it earlier let us recall we did let me write it in this way sum do something like sum assign 0 then print F enter the number and scan F percentage D and NAMM sum equals sum plus NAMM and then this is to be done in a loop. So, what how can I make a loop out of this. So, I also read another variable the number of numbers. So, some N was read here. So, I had done some scan F or say let us say of 10 numbers. So, I need not scan F. So, this thing I have to loop this part I have to loop how long. So, what should I put here at the beginning for doing the loop for I since I know beforehand that there are 10 numbers I assign 0 I less than 10 I plus plus then I put a parenthesis here and a parenthesis here. So, the fourth statement comes here confusing should I write it again is it clear. So, I can write for I assign 0 I less than 10 I plus plus print F please enter the number backslash N then here I had done some assign 0 scan F percentage D and NAMM sum assigned sum plus NAMM that is how the loop will go on. But here I am not remembering the number. So, what I can do using an array what I can do is let me now do it using an array int NAMM say 10 comma I is another integer variable. Now, then also I need some sorry sum is also another integer sum. Now, I will first read the array. So, first is reading the array. So, let me put a comment read the numbers all the numbers earlier you see the scan F every time I was doing scan F I was reading the number here I am reading the numbers and storing them. So, what should I do for I 0 to I less than 10 I plus plus this increment array what am I doing print F N 10 number backslash N scan F. Now, what should I do I am reading an integer so percentage D and amperes and what should it be what am I reading first here is an array whose name is NAMM. So, what is the first thing that I will be reading first thing that I will be reading is NAMM 0 this element. So, scan F percentage D and NAMM I Y I because I is the index and I can see that initially I is 0. So, whatever is being scanned will be stored here then I will go back in this loop then the next one will be stored then the next one will be stored in this way the entire array will be stored after that I am trying to find the sum. So, now add the next part that I do is add the elements. Now, in this here I will have to again add the elements. So, the suppose the suppose the array that has been formed has got some elements like say 5, 7, 13, 12, 6 so and so forth. So, this I have to add this with this then I will get a sum and with that 12 I will be adding 13. So, I will be getting 25 then 25 and 12 37 in that 12 gone. So, here I initialize sum to be 0 and then for again I assign the same index I can use I could have used other index also I less than 10 sorry I plus plus I hope you remember that after each of these we put a semicolon in for loop. Some assigned sum plus num i so what will happen? Sum was 0 sum is 0 first in the first iteration of the loop what will happen? I take my value of I is 0 so num i will be taken and what is num i the first element of the num array. So, that is 5 sum plus 5 so sum will be 5 now. Next I go back here I becomes 1 so I come to the second element and I add that with sum so sum becomes 12 automatically go there I take the index is updated I is being updated here so I take the third element and add with sum so it becomes 25 and in this way I go on adding them all the elements in an array. So, the same thing I could do using but in this case what is the advantage that I am getting? I have got I have not forgotten the numbers that I have read so I can do that and again I can print all these numbers I can say now the sum of these numbers is so much so that is how we can use an array. Now suppose I had I had to find the average of the elements what should I do? I have got the sum here and then find average what should I do here? Here of course I will need another variable average and so I can say and average is sum divided by 10. This is a mistake another variable average and so I can say and average is sum divided by 10. This is a mistake that is there. What is the mistake can you find out? Here I found sum that is and then I am finding the average and why I am why why I am finding the average? I am dividing sum whatever What is the mistake? Can you find out? Here I have found some, that is okay and then I am finding the average and why I am finding the average, I am dividing some whatever some I got here by the number of elements which is 10. I knew beforehand that these are 10 elements. Where is the error? Where is the mistake? The mistake is that the average elements cannot be, need not be an integer. Suppose my sum was 25 and I divide by 10. So, it will be 2.5. Therefore, this average should not be kept here. I should have declared it as a float average and not with the int. So, you must be very careful about it. So, this is how, what we have shown here is how we can read an array and how we can use an array. So, let us look at this example of computing the great point average of the students. Let us try to understand what this program does. We have defined a variable n sub to be 6. This n sub means number of subjects. Now, there are 6 subjects. So, 0, 1, subject 0, subject 1, subject 2, subject 3, subject 4, subject 5. Now, for each of them we are taking a great point which is nothing but a Marxian, an integer 3 or 5 or 6 whatever. For every how many 6? Here you see I have used defined. So, this line essentially means grade point 6 for 6 subjects and credit for each subject. So, suppose I have got the subject and the grade point and each subject has got a credit and I have got 6 subjects. So, subject 0 has got a grade point. He has got a grade point of 3 maybe he has got a B grade or whatever and the credit that means the importance of that subject is 5. Subject 1 he has got a grade point of 5. He did really well here and the credit of that was also 5. There was another subject 2 in which his grade point was 4 and the credit of that subject was 4. That is the importance weightage. The subject 3 he got 5 and the credit was 3 like that. And since we have got 6 subjects let us do that. Subject 4 is grade he got 3 and the importance was 4 and this one he got 5 out of 5 and the credit was again 4. Now, the credit point is the grade point is computed here as for each of them we will multiply the grade point with the credit. So, it will be 3 times 5 that means 15 plus 5 times 5 that is 25 plus 4 times 4 that is 16 then 15 then 12 then 20 and all these are added up. So, 40 56 66 71 and 12 71 and 12 is 83 and 20. So, he got 103 points and how many credits were there? 5 5 10 10 and 7 17 and 8 25. So, his grade point average GPA will be when I divide this by 25 is thing will be 4 point something 4 point 1 etcetera. So, 4 point 1 5 or something like that. So, this is what I want to compute. Therefore, what I need is to find out that I have to find the sigma of the sum of the credit for a course I times the grade point of that course I I will do it for all the courses and then the whole thing should be divided by the total number of credits total number of credits. Now, let us see how we have done we can do this program here we can find that the grade point for 6 and credit for 6 and there is I the grade point sum. So, I have to do this sum is 0 credit sum is 0 and I have to find out a GPA. So, what I am asking from the user here? So, the input grade points and credits for the 6 subjects. So, where are those being stored? Those are those are being stored in two different arrays. Here is the grade point array this thing and there is another credit array 6 subjects. So, I read for each of the subjects I less than I 0 to n sub I read the grade point say 3 and the credit for that subject say 4 and again I go and store the grade point of that subject grade point that has been obtained is 5 and say credit is 3. In that way I go on filling up reading two arrays. So, here I am reading two arrays you see here I am reading two arrays in one scan if statement and through one for loop through one for loop I am filling up these two arrays. So, the reading part is complete here next I come to the computation grade point sum will be you now know what is meant by this this means grade point sum is equal to grade point sum plus grade point I times credit I. So, it is g p sum is whatever is the g p sum initially g p sum was made 0 g p sum plus grade point I times the credit of I and that has to be done in a loop just as we had added the elements of an array. So, and credit sum also I am also finding out the credit sum the credit sum was 0. So, whatever the credits are I am also adding them. So, by adding this array I am getting the total number of credits here and here I am getting the grade point sum now the grade point I have some a grade point average is grade point sum by credit sum and then I print out the g p a. So, please try to understand this part what I am trying to do is sigma grade point I times credit I divided by sigma of credit I. So, the sigma of credit I is being computed here this is computing sigma of credit I why because this is being done in a loop and here I am doing this part sigma of grade point of I times credit I and adding that with grade point sum. So, these are very useful program which illustrates a number of things and in the assignments you will be given more number of programs to do which will give you a very good practice.