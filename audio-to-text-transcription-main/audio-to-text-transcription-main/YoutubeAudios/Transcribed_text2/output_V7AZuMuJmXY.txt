 We were discussing about strings and in today's discussion let me recapitulate what we the last part of what we discussed in the earlier lecture. How can we read words from an input? So, there we had introduced this percentage S format with that with percentage S if we read a name then it has to be noted that the amperes hand is not needed in this case right. The amperes hand is not needed when I am reading a string when I am reading a string I do not need that amperes hand. Now, the point to remember is that whenever I am reading this in this way the string will be read the string will be read until there is some blank white space this is also called as white space or a tab sign or a carriage return or entered is pressed. So, if I type on a b c and then I type blank then this a b c will be taken as the word. So, when I perform scan F in this form in name then a b c will go in the name all right. So, this is what we had seen last time. So, that is why this example was given if we type Rupark Biswas since after Rupark there is a blank we will stop at that point of time the name will be assigned to Rupark name will be assigned to the string Rupark name will be assigned the string Rupark. On the other hand when we read a line of text if I suppose I want to read say this Rupark Biswas I want to read this blank also this entire thing then as sentence I want to read a quick brown fox I want to read. So, I want to read this characters as well as this blank space as everything then what will be my delimiter by delimiter will be the carriage return the return carriage return or that is often designated as backslash n. So, till I get a backslash n I will go on reading this that is how I want I can read a line. So, in order to do that we can use the gate care function for the purpose by gate care function will be getting the characters one after another and I will go on getting the functions till the character I mean I will be going on getting the characters till I come to a character that is carriage return designating that is an end of the line. So, for example, here a line has been defined to be of maximum length 81 typically as I said a line consists of 80 characters and you must be understanding now realizing now that why I put 81 the reason is here I need a space for backslash 0 and I put c to be 0 c is the number of characters c is here designating the number of characters number of characters red. Now, here we are doing it through a do while statement you can see that we can do we are doing it through a do while. So, I am reading one character here say x and that I am reading it through gate care and that character that has been red is coming to the variable array line line c c was initially 0. So, here I put x then I go up then character I go on I read it and then found that the character is not amperes and I go back again read another character say x y increase c. So, c is now pointing here c is now pointing here and I again go back now suppose a blank has been typed in. So, I come here gate care is blank so that comes here and then c is pointing to the next position here and then I go again here and suppose I type in t so the c is now pointing here and then after that I read the character and the character was amperes I mean character was backslash n that means the end of the character. So, I put back slash n here whatever it was there and c is pointing here right c is now pointing here. Now, I have after insertion of backslash and I come and find here that well what I have entered is backslash n now backslash n should not be there instead of that we should have backslash 0 therefore, I will come back I will decrement c by 1 space 1 position. So, it will come here and I will replace this with backslash 0 right here I will bring in backslash 0 will come here. So, the pattern that will be stored will be x y blank p backslash 0. So, that is what the interesting will look like in that way I am reading a line that is how we are reading a line. So, we have seen that we can read characters as a character eddy care some line in this way line 81. Now, this line I can read character by character or I can type in line to be x y blank p that is also will do the same thing otherwise I could have copied it character by character both of them are really equivalent right. So, here we have read the character until the carriage return or backslash n is encountered and then we make it a valid string by replacing backslash n by backslash 0. An alternative approach of reading a line can be this that I just specify the format here till now what we have seen is that our formats could be percentage s percentage d percentage f like that. I can also specify my format in this way as you can see here what it means is anything I am sorry what happened. Anything that is a b c d or whatever that this entire thing and here there is a blank here there is a blank. I do not know what is happening here here you can see there is a blank here. So, that means, what is allowed anything including bank blank capital A to Z everything is allowed as members of the variable line. Similarly, here the specification is that it can be carried this is a wild card it is called that means, we can put in anything preceding backslash n. So, this means it is a wild card that means anything can come here as a character that can be a member of the variable. So, that is also another way of specifying it now these are specifics to the language c of course. Now, it is easier relatively simpler to display strings on the screen we can simply do a string we can display the string with percentage S and followed by the string name that is simpler. Now, we come to a very important aspect how do we process character strings. Now, for that we have got several c library functions we will soon come to functions and we have already seen different types of functions like square root maybe is did we see and we have seen we have seen the standard functions like scan F print F all those things. Similarly, we have got c library built in library functions for character string manipulation. How are they looking like they are we have to in order to do that say one is S T R C P Y that means string copy that means if I have a string here say string here is my sorry let me put a blank here my space job suppose this is a string A and I want to copy it to another string B. So, B will also therefore, have my blank job so that is that can be done by string copy function S T R C P Y S T R C P Y how can that be done. We also have a similar thing like string length S T R L E N which means that I have got string say my job again blank job and automatically there is a backslash 0 at the end. So, when I copy it then this will also be with S T R C P Y will have my blank job backslash and will come here sorry backslash 0 will come here but S T R L E N mean string length I will count how many elements are there in the string. Can you tell me how many elements are there in the string 1 2 3 blank is a valid character 1 2 3 4 5 6. So, the string length will be returned that will be returned S 6. Similarly, we have another function very popular function string comparison S T R C M P that means I have got 2 strings my job and here my job and I compared them if sorry if they are the same if they are the same then I will have a 1. So, that is another function the fourth function is S T R C A T what is meant by concatenation concatenation S T R C A T is actually S T R C A T means string length I C A T. So, concatenation that means if I have a string here say A B C ended with this and there is another string say P Q R ended with this when I concatenate that these 2 strings. What I get is a joining of these 2 strings 1 after another when I say that string B is concatenated with A then my pattern will be A B C note that this backslash 0 will not come P Q R and backslash 0. This is known as concatenation of 2 strings. So, that is being given by a function S T R C A T. Now, these are the very common functions for string operations for our job if we need some other functions we can always write function S T R C A T. Now, these are the very common functions for string operations for our job if we need some other functions we can always write functions which we learn in a couple of lectures from now. But, these are already available in the C library and therefore, in order to do that we have to include include S T string dot H. If you recall we had said that if you recall we can include always you do that hash include S T D I O dot H. And also when we use that square root function earlier we had included math dot H that means all the mathematical library of all the mathematical functions. Math dot H when we use for example, S Q R square root. So, this is a function that is already inbuilt in this math library. Similarly, for strings if I use this S T R C P Y S T R C A T S T R C M P compare then I have to include strings dot H in my function. So, here are some examples very much like a string assignment operator string copy just like an assignment. For example, we are saying string copy string 1 string 2. So, both string 2 will be copied in string 1. So, assigns the content of string 2 to string 1 assigns the content. So, this is the source this is the destination. It is copied from here to here say string copy C T calcutta what will happen here that means I am trying to copy C T is a string that is already defined. I have defined C T and I am copying this string now this is a string constant this part is a string constant. So, what I am doing is I have got a variable C T variable of type string. Now, this how did you define it to be a type of type string it was care C T say something like this care C T 20. So, 20 characters can come there now when I write C T S T R C copy C T to calcutta or right now we should say call cutter. Say we do call cutter then in this variable call cutter will be loaded all right a followed by a backstab 0. On the other hand suppose C T is here and suppose another C T another string variable is there which is maybe Mumbai. And I copy string copy C T my C T that means what will happen this string my C T will come into this variable C T. So, this call cutter will be over written and will be replaced by Mumbai now call cutter is a length 1 2 3 4 5 6 7 and Mumbai is 1 2 3 4 5 6 in that case what will happen. As I copy this whole string over here then here Mumbai M will come you will come M B A I and this backslash 0 will come here. And so the entire string will be kept here the last sorry up to this and with the backslash 0 here and the remaining part of unused part of Kolkata will be lost. Now, warning there is a warning here that is assignment operator does not work for string. So, I could not have done string 1 assign string 2 or as we are doing here C T assigned my C T that own do that assignment operator will not work in the case of strings. So, C T assigned Kolkata is invalid string length S T R A E N this is you I will ask you when we teach you function to write a function for finding the string length although it is available in the standard C library. Counts and returns a number of characters in a string. So, length suppose length is a variable of type integer. Lane is of type integer and we say S T R A E N string. So, string is some string some variable name S T R A E N C T. So, C T is a variable and whatever is the and suppose C T is moved by it will find out the length of the characters in this string and that will come into length. So, length here will get the value 6 when I do this function on this on the string. The null character at the end as I said is not counted because that tells you that you need not count any further. Counting ends with the first null character. So, if I do Kolkata if I copy Kolkata the string constant Kolkata to C T and if I find out the length of C T it will be 1 2 3 4 5 6 7 8 and backstarts 0 will be left out. So, N is assigned 8 writing the string length. So, one problem that can be given to you that I am not talking about this function part right now. Suppose I am trying to find out the string length of a character string I am trying to find out how do you find out string length. I mean it is writing a program that is finding the string length. You need not bother about the structure of this as yet but let us look at the algorithm purely. What is being done? Lens some variable has been put to 0 and then while I am not encountering now STR is an array of course, array of characters as you can see it is an array of characters. As long as that is not equal to backstarts 0 that means not the end of the string I am going on incrementing this length. Lens was 0 length becomes 1 like that and then we return length after a completed then I return length. Now, this is provided in the of course, I have to include the string dot h but this thing this is what I am writing if but actually this is already available. So, I need not write it I need to simply include hash include I call it hash include string dot h that light will be there. Similar program is already written and when I write STR alien that is the program that is activated. String compared is comparing two strings. So, we are comparing two strings and return 0 if they are identical. What I just now said was just opposite if they are matching then it returns 0 and if they do not match a little non intuitive. So, keep it in mind that if the two strings match then we will return a 0 otherwise we will return a non 0. So, example is here if I compare CT with the string del E is 0 then I do something. What does it mean CT is a string already suppose that is again Chennai suppose that is Chennai and I am comparing. So, CT is a variable which has got this value and I am comparing with del E of course, they are not matching so it will not it will return non 0. But if the CT was del E then these two have matched and I have got a 1 here. Now, obviously you can also just think and decide how this algorithm can be written that is so simple now we have learnt all the tidbits of writing such a program. So, if this is not equal to 0 then we do this. So, similarly I can do CT 1 CT 2. Now, so before that you can simply think of how the algorithm will look like in case of this. Suppose I have got two strings one is say Chennai and the other string is of course, backstab 0 here instead of N there is a name here. So, how will you do that? So, you will compare these two character by character. So, this is suppose CT 1 and this is CT 2. So, you can very easily compare while CT 1 is 0. I of course, I has been assigned to 0 here is same as CT 2 I what shall we do? We will go on implementing I plus plus. But if it is not equal will come out. So, this here I compare here I compare I come here and here I find that CT 3 and CT 1 3 and CT 2 3 are not the same. So, I will come out. But what happens if they are same? So, I need to put in if they are same I how long shall I go on? No mismatch is there. Suppose this is also N while CT is CT 1 is not equal to CT 2 while CT 1 is equal to CT 2. Do I need another condition here? Yes and CT I is not equal to backstab 0. So, are you understanding this while this condition which I have already written there? That should be true in order to proceed in order to proceed further for further checking. I should they are matching. So, I should proceed and but and also the fact should be that none of these two two CTs nails two strings have reached the end is not equal to M this and CT 2 I. If any one of them has matched has reached the end then my while condition will be violated. So, I will not continue any further. So, I can keep a flag here that what should I say? Match is 1. So, if I go on doing this match will be remaining 1 whenever I come out of this loop I will make match 0. That means it has there has been a match because the convention is that if they are matching then it should be 0. So, you please also try to write this function write this program right now. And ask you to make it a function a couple of lectures later. I hope this is clear this part please try to understand this condition. Next we have got the last one that is a STRCAT that is rather simple and you will also be able to write the program for that. It is two strings are just being concatenated but one thing that you must remember appending concatenating means joining while appending means adding one at the end of the other. So, when I write this a b c p q r then p q r has been appended to a b c. So, string 2 is appended to string 1 that means it is joined at the end of string 1. So, the null character at the end of string 1 is removed and string 2 is joined from that point. As we said that there can be a b c backslash 0 and then when I append p q r to that then p q r will replace this and backslash 0 will come here. So, ultimately we will have a b c p q r backslash 0. So, string copy suppose I have name 1 a string assigned by string copy omith a my t. So, it looks like this a m i t backslash here there is a backslash 0 and there is a blank here you see the string is not a my t a my t blank. Another string is name 2 which is r o y then when I append them concatenate them it will be a my t blank this blank and then r o y and this this blank has been replaced by r. So, r has gone here and we will get this. So, this is string concatenation this will often come handy when you type in some character strings or type in some lines or compute using some text strings text English sentence has been given and you are trying to find out where the verb is and all those then you need a lot of string operations like this. So, here is an example here we are reading a line of text and counting the number of upper case letters how many upper case letters are there. So, what are the things we are including here stdio.h our old friend is here string dot h is also there then look at this function I have defined the line to be of length 81 big one 81. Now, I have got the variables i and carn and carn is equal to 0 I am asking the user to input the line I am reading the line using this format which we just discussed that means anything can come here I mean anything can come here like a b c slash dash percentage p whatever is coming except backslash n is coming here and then I am finding the length of the line suppose the line that was actually typed in in this way through this scan f is say apple blank is red. And then this backslash is now this string length str alien will find out the length of the string 1 2 3 4 5 6 7 8 9 10 11 12. So, 12 is n is becoming 12. So, for i equal to 1 to n now here is another new function that we are finding is upper. If the character is is upper is upper case later is upper if the character that is being read that is being passed here I put in some character and if the character is an uppercase later then I will count that. So, suppose here I make a little change I say this is I I say that this is capital and I say I say that this is capital. So, what is happening is it is reading character by character from here I 0 onwards and checking whether this character is an upper character if that is so count is becoming 1. So, count becomes 1 as is uppercase later then we go on in this loop I is being incremented until it comes to 12 less than 12. So, here is another one so I will get the count to be 2 it goes on and here I will get another one so 3. Printed the number of uppercase later is percentage D is now look at this the number of uppercase later in string percentage is percentage D. So, line will be printed as a line apple is read the number of uppercase later in apple is read is 3. So, here this program demonstrates a couple of things one is first of all this is a new thing that you have learnt is upper I am just writing it separately so that it is clear. But, in actual C library the function is written in the without this gap or without any special character in between this is the first thing that we have learnt. And how we can we have already seen it is a it is an application of what we learnt how we can read a line using this wild card format. And then we found out what is the length of the line by our newly learnt function STR alien and using that we have this is this looping we already know we have practiced it so often. So, we now using this value using this for loop for so many iteration so many repetitions that is determined by the value of n will check the entire string. So, this is an example of applying the string function in string operations will go further with some more examples later.