 So, we have seen the application of the constructs of if then and if else as well as while two-hoyle and four constructs till now we have seen examples in of while and two-hoyle we will see more examples for loops. For example, let us also see another application for the application of fall loop. Say for example, I want to print I want to add 20 numbers. I think we have seen such examples we will see more interesting examples a little later, but before that let us look at some common errors that take place often unintentionally in writing loops and that gives rise to a number of logical problems in a program. For example, let us look at this here you can see the first line what will happen the intention was that while sum is less than equal to norm that means it is less than equal to some a particular value may be 20 we are adding sum plus 2. What does this mean? Let us try to understand this example forget about this part what would what is the intention of doing this that means suppose, suppose norm is 10 and sum is 0. So, while sum is less than norm I will be adding sum and 2. So, sum will be sum will be 2 and then sum is still less than norm. So, again it will be 4 sum is still less than norm it will be 6 still less than norm it will be 8 still less than equal to norm it will be 10 then still less than equal to norm it will be 12 and then when it goes there it will stop. So, what will be the sum sum will be 12, but that was my intention of the program, but unfortunately I have put a semicolon here what does that imply that implies that the entire while statement ends here that means while sum equal to norm do nothing. So, there is the end of the statement so nothing has been specified there and whatever sum was there suppose sum was 0 sum will perpetually remain less than 10 or norm and will go on forever. So, this semicolon should not be given because the while statement is actually extending up to this point up to this point that is the whole statement. So, next example we take is this one for I assign 0 I less than equal to norm plus plus I forget again about this what is the intention of this program what will it do I is 0 and norm was say something like 20 then sum will be added to I. So, sum will be 0 then I will be incremented so I will become 1 less than norm it will be added. So, sum will now be sum was 0 so sum will now be 1 here was sum sum was 0 sum becomes 1 then sum becomes 2 sum becomes 3 like that it will go on. However, since I have put a semicolon here this part is not a part of this for statement consequently this loop is a null loop nothing is being done here and for I equal 0 I less than equal to norm I plus plus do nothing. So, nothing will happen here this statement will not be executed here is another type of pitfall where let us study this for I equal to 1 I not equal to 10 I assigned I plus 2 what will happen to this loop. Can anyone guess I is 1 so sum sum sum has been computed sum is sum plus I sum was 0 so 0 plus 1 sum is 1 then I is incremented to 3 then sum equal sum plus I so sum becomes 4 then this is incremented to 5 after each incrementation I am checking with this condition so I is 5 not equal to 10 fine. So, I will add 5 with this so it will become 9 then become 7 I is change to 7 I check with this still not equal to 10 so 7 is added to this 16 this becomes 9 still not equal to 10 so then 9 plus 16 plus 9 maybe 25 and then this is incremented to 11 because I plus 2 still it is not equal to 10 so what will happen it will go on it will never be equal to 10 this means as long as I is I is not equal to 10 you will go on so this will be a case of another infinite loop just as in this case there is a null statement this will be done and then this statement will be done only once here it will be an infinite loop because this condition will never be made so these are some points where we should be very careful about now let us have a very interesting program we want to print this is the condition we want to print we want to print a pattern like this we want to print a pattern like this say 5 stars in a row and 3 such rows so this sort of pattern how can I do that my algorithm will be so I want to print I want to print a row of stars how many 5 stars so how can I print 5 stars in a row if I just write one statement print F star and do not give a backslash M then what will be done a star will be suppose this is my screen alright a star will be printed and if I put it in a loop say for I assign 0 I 5 I want to do less than equal to 5 I plus plus and I do this then what will happen I 0 so once it is printed then I 1 once it is printed again in the same line then again another one so since I am giving a gap what I can do here I can keep a space here star and then a space I show space by blank so exactly a star and a blank will be printed so I 0 I is 1 I is 2 I is 3 I is 4 and then it is incremented and checked I is 5 so less than 5 it will not happen then so this will be a loop after doing that so in a loop I will be printing 1 row then I will give print F I have to come to the next line so I will simply give a backslash M that means I will come to the next line and this again loop I will carry out how many times 3 times because I need 3 rows so what should I do I should do this again loop this 3 times so how should I write it how would that look like now it should be something like this for J J is another variable assign 0 J less than 3 J plus plus for I assign 0 I less than 3 J plus plus for I assign 0 I less than 5 I plus plus and then here print F star followed by a blank and then the code no backslash M at the end of this so after this loop is done then I will do print F backslash M so this part this part will be repeated 3 times. And in this part it will be this one will be done 5 times so star star star star star will be printed then we will come to the next line and here this is my next for loop so I come to print F and again do the same thing this part star star star star star 5 times this print F by this loop this is print a row printing a row by 5 times and then again I come and do a backslash M I come here and do the same thing 3 times and then come here backslash M and then print stop so print a row of 5 stars and repeat therefore I am repeating this print star 5 times in a loop so that is a very nice interesting application of a fall loop I hope you have understood this. So here that is exactly what I was showing you look at this here the number of rows and columns have been made a little flexible rows 3 columns 5 now row equal to 1 while row is less than rows printed row of 5 stars this I have done it with the 4 here it is shown using a while so let's see while whether you can understand this also with a while row is 1 now row is less than rows how many rows will do row is less than rows that means as long as it is sorry as long as it is three rows will print a row of 5 and what how do I do a row of 5 I will that we have already shown that how we do it and then we implement the row alright. So here while row is less than rows print a row of 5 printing a row of 5 is done through in this manner so this is the outer loop this is the outer loop. Column is 1 while column is less than columns so 5 columns 1 2 3 4 5 why column is less than column print if star and blank and then column is implemented now since I am doing it in a while it is done in this way okay I have already shown you in the earlier this thing how we can do it with 4 I can do the same thing with 4 right. The same thing with 4 and here it is being shown how it can be done with a while and then I print a fan and do this you can try to understand this again yourself. Next say here this is being done again in the way that I had written using 4 here only 3 and 5 these things are variable for O equals 1 to row less than equal to 3 plus plus row here it is plus plus row that means first is implemented then column is less than equal to columns why it is less than equal to while if you remember I was when I was doing it here when I was doing it I had less than 3 less than 5 less than 3 less than 5 but here it is being less than equal to 3 less than equal to 5 why because I started my index with 0 and here I am starting my index with 1 all right so this you should be very careful and you should always hand press your program and see whether you have done it correctly if there is a little bit of confusion because this is very important and you should be very careful about it. So the same thing that I had shown is written again here another 2D figure this is a little more interesting first row we print 1 star second row we print 2 stars third row we print 3 stars fourth row we print 4 stars and then 5 stars so how many stars I will print that is also variable so if we think about that how many times I will print in a row that is also a variable how many times I am doing this so for the first when row is equal to 1 then I am printing 1 star when row is equal to 2 I am printing 2 stars when row is equal to 3 I am printing 3 stars so every time I can also say that I am printing row stars I am printing row stars row number of stars therefore how many times I will do in a loop in the inner loop you could see that when I we had drawn this thrice or twice whatever there was here there is an inner loop 5 times and an outer loop that was doing 2 times right now here what will change it to is inner loop row times outer loop may be 3 times so this is variable okay now let us see how we can program it constant integer rows is 5 that I have not made variable there are 2 integers row and column for row equal to 1 I start with rows row as an index and row less than rows less than 5 plus plus row what do I do column equals 1 I will do up to column less than equal to row so first row column 1 column is less than equal to only once I will print then plus plus column so column becomes 2 but what is my row row is 1 still I am pointing at this row row is 1 so I will do print F now the value of row becomes 2 as an increment but then the column this is the column this is row the column will be less than row because row has become 2 now it is pointing to this row this row so column being less than that I will come out of the first row okay second row what will happen column will start from 1 and row is 2 so column less than row I will print once I will go back here column is becoming 2 and column is still equal less equal to row right not less than but equal to row therefore I will again print here then I will come back here and now column is 3 column is 3 but row is 2 therefore I will not print any longer I will come out of this loop and go here then row will be incremented here all right row has been incremented here and now again column is initialized to 1 for the third row first it is printed incremented column comes here all right then columns column comes here so column is 3 still less than equal equal to row so I print the third one and then it is incremented so the row becomes 4 but my column is sorry the column becomes 4 but row is 3 therefore the column is I go out of the loop and again column is initialized to 1 and my row is incremented to this so that is how it is done you please look at it more carefully and you will have to understand it and this will give you a very clear idea how a nested loop is working so this is one example here what we are trying to do just think of this figure first row is 5 so row is this column is here how long shall I print in the columns keeping the row fixed what will be my logic the logic will be well here I started row with 0 and less than number of rows rows is 5 that is not that important here let us look at this first I will do 5 then I will do 4 but there is another one for the second row I am shifting one space I am shifting this should have been aligned and then I am shifting and giving a space and then doing it so graduates being shifted so let us see what is being done let us look at the first fall loop here this is the outer fall loop let us outer fall loop is up to this and let us see what is happening row is 0 to number of rows less than so I have started with 0 so I did not make it less than equal to it is less than 5 I will do this number of times internally what am I doing this doing here column is 1 and column is less than row because less than equal to row because row is 0 row is 0 and column is 1 look at the trick here the trick that has been applied is column has been in is starting with a value 1 and as long as column is less than row I am printing blank so how many blank should I print for the first column 1 blank then column less than now here from the first column look at this point column equals 1 column less than equal to rows rows is 5 as long as column is less than equal to rows minus row what is my row initially my row is 0 so rows minus row is 5 so column is 1 column is less than equal to 5 plus plus so I do print I do a print and I go on doing this as long as the column is so column is now incremented to 2 3 4 how long will it come for the first row it will come 5 times because rows minus row 5 minus 0 so I will print this and then I will come back this loop is over this loop is over I will print a backslash end up to this sorry I am sorry this for loop is actually extending up to this so from here I go back so I come to the second row so now row becomes 1 let us see now row becomes 1 less than 5 for column equal to 1 column less than equal to row 1 still valid I give 1 blank here 1 blank here for the second row my row pointer has come here row is 1 then I do column 1 2 column minus rows so once blank I have already given so I am now my starting is here how many now row is 1 so 5 minus 1 so that means 4 4 times this will loop and print star and then print FN next time I go back here and this becomes 2 so row 2 to less than 5 column is again now 2 blanks column is 1 2 less than equal to row and row is 2 so 1 to 2 so there will be 2 blanks here 1 blank here 1 blank here so I am coming here and then I am printing this is 2 so 5 minus 2 3 stars so in this way I can go on and print this figure by an intelligent way of applying the fall loops or the nested loops and putting in the spaces together spaces properly I think this gives a very interesting example for you to look at so these are some of the examples that we have seen will come to this 4 thing again later but let us just remind you a little bit about some things that we had mentioned in passing for example this operator plus equal to as for example here a plus equal to b this means a assigned a plus b this is some shortcuts all right a minus equal to b that means a is assigned a minus b here a star b plus 10 a star assigned b plus 10 that means a will be assigned a times b plus 10 so in that way we have got this one also say a assigned b that means a is assigned a divided by b these are some of the shortcuts so this is just to wrap up some of the assignment operations that we had talked about but these are as I said that you can keep this for later use right now more fundamental thing that you need to know is the use of if else for while do while etcetera in the next lecture we will start with a new concept called arrays and there we will find that this loops are becoming so important and we will have many interesting applications using arrays that will be done from next lecture onwards thank you.