 We are looking at the if selection structure where the structure was something like if some condition and then there were some statements and here is an example of what we are looking at. So, here you can see that if a is greater than b and also greater than c here is the logical connective. So, then this statement will be executed. So, in English we can just call it like if the condition is true then if the condition is true then execute a set of statements. So, in this case the set of statements is just only this printf otherwise if this condition is true then this statement will be printed. So, this is what we discussed in the last class. Now, one thing for those who will be writing programs in C you should remember that this condition is always within a parenthesis and within that parenthesis there can be a composite expression which is here you can see there is a logical expression here is another logical expression and here is a composite logical expression joining them by and or it could be by or etcetera. So, in that way we can form the condition statement and if the condition statement is true then these things will be executed. We will see more examples as we go ahead. So, let us look at a little more different little more extension of the structure here. Here we are going to see the if else structure what we actually want to mean is if a condition is true then we will be doing these things and if the condition is false then I will do these things. Let me clarify it a little bit more. Suppose I write if x is greater than 5 increment x by 1 and printf new value of x is percentage d. Baxlash n x that means if x is greater than 5 suppose x is an integer I am assuming that x is an integer here. So, somehow somewhere up here I have written in text equal to or in text just in text and later on I have assigned x to be 7. Now, when I encounter this condition this condition evaluates to true then I come to this set of statements because this condition is true. So, what will be the value of x now x was 7 it is greater than 5 therefore, x will be 8 and what will be printed new value of x is 8 that is what will be printed. Now, suppose I write printf x not greater than 5. What I intend to do is if this condition is true then this will be printed otherwise this will be printed that is what my intention is that is what I want to do. But the way I have written it will actually do something different you see when the execution will be done you know the execution is normally done in a sequential manner. So, here we will come x is greater than 5, x is 7. So, x is greater than 5 this thing will be printed and we will come out and come to this next statement let me number these statements say this statement was 1 this was 2 this was 3. Now, see I am calling this entire if statement to be a single statement. So, 3 and then 4. So, normally one will be executed then 2 then 3 now 3 will be executed because x is greater than 5. So, this condition is true and then what will be executed 4. So, what will be the output what will be written here new value of x is 8 will be printed and here when it 4 is executed again will be printed x is not x not greater than 5. But that was not my intention. So, in order to avoid that I can write a new statement here there was an if if I write here else this that means what if this condition is true then print this otherwise that means, if this condition is false then do this and then number 5 can be something else and that will be executed. So, what will be the execution suppose x is equal to 4 let us try to write down what is the execution sequence then 1 then 2 now x is equal to 4 therefore, this condition will be false this condition will be false. Therefore, this statement 3 will not be executed this part of 3 will not be executed then we will come to this else statement that means, if the condition is false then I am coming over here and so 4 will be executed 4 will be executed 3 will not be executed completely and then 5 will be executed. But if I had not put this else then what would have happened in this case if x is 4 in that case this will not be this will not be true only this statement will be printed fine. There would not be much problem but suppose x is equal to 7 and if this else is not there then what will be printed x is 8 x not greater than 5. But if I put the else here if I put the else here I am clearly repeating a little bit more because a lot of students face difficulty in this structure. So, if I put else here in that case this will be x is 7 so this will be printed and at this else this condition was true. So, this is this part will not be executed this part will be executed only if the condition was false. So, this contradictory situation would not occur alright. So, let us look at some examples of this F statement if else it is also a single entry single exit structure it allows us to specify to alternate blocks of statement one of which one of which is executed any one of them depending on the outcome of the condition. Essentially what we are trying to say is that I will have a single entry point to a decision box and I will check for some condition I will test that particular condition if that condition is true then true then I will do some state set of statements let us call that S 1 otherwise if it is false then I will carry out some S 2 alright and then I will be meeting maybe at some other point which is S 3. So, this structure I can write as if condition then I do I have named I have not writing the statements I am just writing S 1 else S 2 and then S 3. So, my flow will be either this way and S 3 or this way and S 3 ok. If I had not put this else how this diagram look like you have seen this diagram now if I had not put this else how the diagram look like the diagram would look like if here I have got the condition block decision box true then I do S 1 and then I do S 2 and S 3. So, we will come at this point if it is false then I will also come at this point if it is true then also I will join at this point if this else was not there but since this else is there then I just separate out their point of joining alright we will see more examples of this. So, the general syntax of this is if condition then block 1 block 1 is what I was calling S 1 the set of statements else block 2 the other statements alright. If a block contains a single statement then the braces can be deleted I am sorry if the block contains a single statement then these it is not essential that I put them but just for the sake of generality in most of the cases I will have more than one statement therefore, I am putting that in place alright. So, the diagram that I was looking at I was explaining that sort of diagram suppose the grade is 60 if the grade is greater than equal to 60 suppose somebody is grade is or marks is 50 then at this point the condition is false this part will be executed if the grade is 70 that is this condition is true this part will be executed then I will come to this common point this is a common point which will come now. So, this I can write as if grade is 60 see here there is only one statement. So, I need need not put I have not put the braces here print sorry print a past else print a failed and then whatever I had to do I will do it here and then whatever was following that will follow here ok. So, let us come to so I hope this is clear. So, the syntax of e fails let us look at little bit more here I have said block 1 block 1 means or S 1 whatever you name it this is block 1 or I had named it as S 1 the same set of statements where there are number of statements each separated by a semicolon please note suppose there are n statements there separated by a semicolon ok. Now, next I come to this if I want to do L is also if expression statements 1 to n else state these statements 1 to n. So, this is my block 2 and this is block 1 ok. So, here we can see that based on this expression which is a condition evaluation if this condition is true I will carry out these statements else I will carry out these statements note that these individual statements have got semicolon and this is a whole body of the L statement this is the whole body of the if statement. So, composite if this entire thing we call an if else structure. So, if grade is 60 print F past else print failed. Now, this next we are coming to a little more complication of the same thing it is a nesting of if else structure. Now, by this if else what are we trying to achieve we are achieving branching that means, we are carrying out a sequential flow we are carrying out a sequential flow and from there we made a decision box and then we branched either in this direction or in this direction. Now, suppose here in this direction it is true and this is false again I come and make a decision it can be if x is greater than 5 then I come here and y is greater than 7 then I do something here it can be x is greater than 5 I follow this path, but y is not greater than 7 so, I follow this is true this is false I follow this false path if x is greater not greater than 5 I come here and suppose I check z less than 2 true or false there can be 2 outcomes. So, suppose x is 4 so, not greater than 5 I will come through this path now z is 3 so, z is not greater than 2 less than 2 therefore, I will follow this path. So, you see the paths that we follow that is a branching that we do can have the path that we follow can have more than one decision box say x is greater than x is 7 so, here I was coming in this path then I follow this path because x is 7 this condition is true and I find that y is 8 so, I follow this path all right if y was 6 then I would have followed this path. So, in the path that the program follows there can be more than one decision box so, that is what we mean by nesting of Eiffel structures that means, nest one Eiffel statement within another now all statements may not have the else part now rule to remember this and else clause is associated with the closest preceding unmatched Eiff really confusing what do I mean by this let us look at this how will this be executed. Here E1 means some expression if E1 is true then S1 else if E2 then S2 now with whom does this else go this else certainly goes with this preceding F if I just quickly draw this that flow chart corresponding to this how does it look like I come here and evaluate the expression E1 on true I do S1 on true I do S1 on false here is false all right I come here and there is another Eiff here so, I again check E2 if E2 is true then I do S2 this statement actually means this graph if E1 is true then I will carry out S1 otherwise else is there so, this else is linked to this if then I do this one what about this let us erase this for a while and how would we interpret this one here you can see there are two else's with whom is this else paired this else is paired with I have written in a bad way this else is paired with this F so, this means again I check E1 E1 is true so, I carry out S1 else false that means this else is for this decision box I check here E2 E2 is true so, I carry out S2 and else I will carry out S3 this is what I am trying to do now here I would have preferred to write it in a better way that is why if you recall in a earlier lecture we had talked about a good program writing practice that is the indentation I would have liked to write it in this way F E1 then S1 else if E2 then S2 else S3 which makes it very clear that this else is corresponding to this F and this F this else is corresponding to this F right let us look at the third scenario what does it mean if E1 if E2 S1 how do I draw that I draw that like that I take E1 if E1 that means, if E1 is true I immediately come here and the statement starts with another if a nested if this is known as a nested if one if within another there is one if statement there is another if statement within this this is knows as nested all right so, here sorry I will be here if E2 S1 so, immediately I am there is no else here by the way so, if E1 then I come here then if statement is again there therefore, there is another decision box where I am checking the condition E2 and if E2 is true then I will follow then I will carry out S1 else S2 which else should it be here or there now this is something this else is pairing with the preceding F so, it should be false will be S2 now this else is therefore, covered this path is covered so, this else can only mean this one and S3 will be because this is already covered right so, this is the nearest one to this clear so, if we go to the earlier slide let me go back to the presentation so, here this one how this one actually look like how will this one look like there is something still there so, how will this one look like coming straight here if E1 if the condition is met then I again test here if E2 this is true this is true then I come and do it here S1 and else this else is again with this F so, it will be here S2 and I have not specified this one here all right so, if you put a little bit of mind here so, you can see many different other scenarios that can come and we can proceed accordingly. Let us see here this one as I was saying it would be nicer to write it in this way because here you may feel ok there two else is two if who goes with home now here if I write it in this way if E1 S1 else that means, this if cells else if E2 S2 here if E1 S1 else if E2 S2 else S3 so, this else is therefore, with I am sorry I think I think I will have to go back to a couple of slides you see and else clause I would like to be corrected a little bit and else clause is associated with the closest preceding unmatched if any if that is not there that should be it should match with that so, that is what I explained in the these examples so, it is a much better for example, let us look at this how do I like to write this if E1 I would not prefer this also I would prefer that I write it in this way if E1 then if E2 S1 else S2 then it becomes very clear this if cells and else are very clear say for example, here also this is better but still I would prefer to write this one as this one as this is one way I can write if E1 if then I mean this is the part of if if E2 S1 else S2 and under this if that is what is been done here else S3 okay so, what we have learned today is a nesting of another structure what we are discussing now is how we can have better or more versatile flow normally it is a sequential flow but based on the decision condition points I may have to take different parts which is known as branching right and for branching or selecting the proper path the structure is F and along with that we have learned today if else structure and we have seen how if else structure can be nested to give rise to some better more versatile scenarios we will continue with this in the next lecture thank you.