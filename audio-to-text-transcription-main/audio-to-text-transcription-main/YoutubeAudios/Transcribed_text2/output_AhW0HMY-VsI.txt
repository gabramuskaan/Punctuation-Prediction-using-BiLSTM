 Till now, we have learnt about some constructs of programming to implement some very generalized structures, programming structures. What are they? First, we have seen how we can do branching, right. And branching means that whenever there is a sequential flow, we take a decision we come to a decision box and depending on whether the result is true or false, we take different paths, right. That is what we have seen and that is implemented by F L's statement, right. We have seen that. The other thing that we have learnt is, repetition or looping, all right. That means we have come to a particular point, we take a decision and based on the decision, we decide whether we will go back to an earlier point or we will continue forward, okay. So, this is this repetition, we have we could achieve by while statement, do while statement or while do statement or for statement. So, if else and do while do for all these are constructs in the C language, whereas the concept of branching and repetition or looping is general for most of the programming languages. So, these are general concept while while this is a specific construct corresponding to the C language. Now, to start our journey into the world of real examples, let us first start with the school level equation solving when we try try to solve a quadratic equation of the form A x square plus B x plus C equals 0. We try to solve it means we wanted to find the roots of the equation, roots of the equation of this form and what are the roots? The roots are the values of x that will satisfy this equation. For example, I can have 3 x square plus 5 x plus 1 equals 0, all right. What are the values of x that we will solve that will solve this, right. So, we knew we know that we can solve this general equation that is x is minus B plus minus root over B square minus 4 AC divided by 2 A. By this, we can find the roots of this equation and since it is a quadratic equation, how many roots will be there? There will be 2 roots. We also know that if B square minus 4 AC is equal to 0, then this part will be 0, what will be the roots? Roots will be minus B by 2 A only. So, there will be 2 roots which are equal the same roots. For example, if I have x minus a whole square that is equal to x square minus 2 A x plus what will that be plus a square, right. Now, if I saw and if I say that this is equal to 0, from here I say that this is equal to 0. So, if I solve it, I will make this as x minus a whole square and that means x assigned A will be the root, right. That means x minus a is 0. So, x both the roots will be equal. So, if I have root over B square minus 4 AC equal to 0, in that case I will have both the roots equal. If root over B square minus 4 AC is negative, we know then our roots which are minus B plus minus root over B square minus 4 AC by 2 A. If this part is negative, then the roots will be imaginary, right. If B square minus 4 AC is greater than 0, then we will have real roots, right. And the real roots will be minus B plus this and minus B minus this by 2 A. So, that will be that is a school level knowledge that we have. Now, if I want to apply this knowledge to write a program, that can take as input any equation of that form A x square plus B x plus C and find its root, how will the program look like. Suppose, I want to write such a program and now henceforth in my discussion about this problem, I will call this B square minus 4 AC to be the discriminant. I write it for short, DISC as the discriminant. Because that is what is telling me discriminating between the roots DISC. So, whenever I refer to discriminant, that means I am talking of B square minus 4 AC. Now, I want to write a generalized program for finding the roots of A x square plus B x plus C. So, equal to 0. So, I want to write a program that will be equally applicable to solve this root, this equation, solve this equation or 25 A x square plus, sorry, here I should not write C. Let me put it something like 5, 25 A x square plus 17 equals 0 or any such equation. So, you see here, what is the coefficient of x? coefficient of x square is 25. What is the coefficient of x in this equation? It is 0, that is why this term has vanished. And what is the value of C here? 17. Whereas, in this equation, the coefficient of x is 3, x square is 3, the coefficient of x is 4 and the constant term is 5. So, since I am going to solve any general equation of this form, how can I define the specific equation? An equation of this form can be specified by specifying the coefficients. So, I have to accept the values of A, B and C from the user. And you can see that the root is dependent on the value of these coefficients because we know the root x is minus B plus root over B square minus 4 AC by 2 A. So, the roots are determined only by the value of these coefficients. Therefore, the first step that I will have to do here, we can start with the flow chart. So, I will first, I write read A, B, C, read them from the user. Then, I compute, find discriminatory. And equal to B square minus 4 AC, I just compute this part. B square minus 4 AC because depending on this, we will have the different values of the root. Or I would say, alright, alright. So, now, so earlier to earlier I said that the discriminant is root over B square minus 4 AC. I would like to correct myself. I would say discriminant is this part B square minus 4 AC because depending on the value of this, if this is negative, then the roots will be imaginary because the square root of this will be imaginary. So, this is the discriminant part. If this is 0, then the roots are equal. If this is greater than 0, then the roots are positive and real. And if it is negative, then the roots are imaginary. So, at this point, I will make a decision. So, I will make a decision. And greater than 0, yes. Then, what shall I do? I will print roots are real. And then, I will print the roots. If the discriminant is not greater than 0, then I come here and I check whether discriminant is 0, if yes, then my decision is roots are equal and then, I go and print the roots. If this is no, then obviously, I will print imaginary roots. I can see this part and then, I will go and print the roots. That is the flow chart of the whole thing. So, I am computing this value and based on that, I am finding the roots. Now, if the flow chart is clear to you, let us proceed to write the program for this. Now, here, obviously, I should have said that the discriminant is actually this part, b square minus 4, and then, I take the square root of that. So, now, if we start writing the program, if I am a nice programmer, I will always start with, so first, of course, has include STDIO.H. Then, I am including another thing, which is a library. called math.leaf.leaf stands for library. Why I am including that? I will come to that later. Now, we start our program main and we start. I can give a comment. And program to find roots of a quadratic equation. So, that is the comment. So, anybody can understand what I am writing here. Now, I will have to declare a number of variables. I will declare, let us say, the coefficients are all integers. So, int a b c. Now, b square minus 4 is, you can be anything. So, I put float discriminant. Also, float root 1 root 2 roots. Next, what should I do? Let me proceed to the next page. With this declarations, I hope you have been able to take down this declarations. Now, let us proceed and go to the next page. I am continuing with that. I start with printf. Enter coefficients a then b then c. So, the user is told that he is supposed to enter the coefficients. Now, next thing will be scanf. Since, I know I can also say that please enter integer coefficients. I am just restricting it here like that. Though it is not necessary. So, scanf percentage d, percentage d, and b and c. So, what I will do? My system will read the three integers a, b and c. Now, start the main program. And as if you have studied the flow chart that I had shown here, here you can see that I have got only one decision box. And I can proceed through that decision box. There are two decision boxes actually, one in this direction, another in this direction. So, accordingly I do not have any loop here. So, what is the construct that I will be needing here? The construct that I will be needing here is if. So, what should I do? First, let me compute the discriminant. I have got b, a and c. So, I do. Discriminant assigned b square minus 4 a, c. So, b times b minus 4 times a times c. So, this is an arithmetic expression. I get discriminant. Now, I will have to take the path depending on the discriminant. So, what I will write here is if then apparent thesis for the condition. If discriminant is greater than 0, greater than 0, print F, roots are real. And I can put a backslash in here. Else, I have not computed the roots as yet. So, let me write the roots as close to the E as possible as we have learnt about indentation. So, else, if I should have written this if also in small just for the sake of uniformity. And not only for the sake of uniformity, c is very much case sensitive. So, capital I f is not if. So, if discriminant is equal to 0, print F, roots are equal, backslash and else. Else, now this else comes under this if you remember that else and ifs are tighter based on the closest, the else is connected to the closest the closest. So, these two else, else the only option is discriminant is neither greater than 0, not equal to 0. So, discriminant is less than 0, then print F, roots are imaginary, backslash and again. Now, so I have just said what type of roots they are, but I have not printed the roots as yet. We have not found out the roots. So, what I can do? I can modify this a little bit or how do I find out the roots? Let me go to the next page. I do this and then I come back to a particular stage or I can I can I can do it here itself. How do I how do I find out the roots? Say, let me go back and do it here. Here I have I have not written down what the roots are. How could I suppose I modify this part a little bit? I modify this part a little bit. So, let me modify this part, I will rewrite this part in the next page. So, I rewrite it as if disk is greater than 0, print F, roots are greater than 0, real. Now, I compute I compute say I compute let us call it I should have declared this also discriminant one another part. That is I had the I had the discriminant part. So, I can certainly make another variable. So, I add one more variable here in A B C and here I entered another variable say D Y I will show later. So, I have entered another variable there. So, print F roots are equal and D is square root of disk. So, I called disk to be B square minus 4 AC. Now, I am finding the root of that. Now, here I have committed one mistake. Can you tell me what the mistake is? So, this discriminant can be integer. But, when I take the square root of that it can be a float. And also here I have already declared if you look at I look I disk I somehow declared disk as float. But, since A B C are integers then this will also be an integer. So, I should correct it a little bit. What should I do? Or it really does not matter if I keep it as float. So, only thing is that I cannot keep the D here. I will have to remove this D. And I will also remove this and will make this small D as a float. So, then I come here D is square root of the discriminant. Now, what is this square root? Who will compute this square root? This square root computation is done by an inbuilt function in C library. C compiler provides us with a library of some inbuilt function mathematical functions which we can call and invoke whenever we need them. So, you can see here that is why I have included this math dot leap. That means I will be using some library function here dot leap means library. So, you will find in the course of this lectures and more examples where you will see more number of library functions. But, just for this we need the square root function. So, I compute the square root of disk D assign the square root of disk and then root 1 is what? root 1 is minus B plus D by 2 A is it clear? The two roots. One is I have my formula is B plus minus root over of B square minus 4 AC by 2 A. So, this B square minus 4 AC is D here. So, B plus D whole divided by 2 A I should also put a parenthesis here is root 1 and root 2 is minus B minus B. Minus D divided by 2 A. Then I have got the two roots and I can print here. So, I have computed the roots. So, I can either print it here. I can print F. Now, the roots can be float. I can say the roots are R percentage F. Roots are floats percentage F, percentage F, max slash N and root 1 comma root 2. So, this is the whole part compound statement if disk is greater than 0. So, if we go up. So, I will modify this part in this way. You will also have to modify this part. What should you do? Simply what can I do to write this? If disk is 0 then I will print roots are equal as I have written roots are real. And then I will find out now I do not need to find out this part. So, let me just show you this part and I will leave the other part for you. That second part if disk oh my god what did I do here? This is alright. It is greater than equal to. If disk is 0 then print F will be more than 1 sentences. So, this is coming else at else part. Else if disk is 0 print F the roots are equal and here I do not need to bother much. I can put a backslash in that you know by now. Print F the roots are equal root is what? Now if in this B plus minus root over B square minus 4 A C by 2 A. If this part is 0 then my root is only minus B divided by 2 A 2 multiplied by A and print F the root is percentage F backslash N root or I can say root 1 because I did not declare anything as root. So, root 1 any one root that is same. This is this part if the discriminant is 0. See so I have just mentioned root 1 Y sorry. You see here I declared only root 1 and root 2 I did not declare root. So, I can make root 1 root 2. Now so this is replacing this part. Now what will you do here? The roots are imaginary but the same thing the values will be the same only thing is roots are imaginary. I leave it to you as an assignment you think of what will you do for that part for the imaginary part. You can understand that only thing that you need to do is to print some roots as say the real part real part is this and imaginary part is this. So, you think about it we can discuss about it in the next lecture.