 So, so far we talked about basic control structures of programs, we analyzed the complexity of control structures of programs, but what we have learned so far, we have learned about some basic data types, integer, car, float and so on, in C. Now, probably these are generally good enough for most of the computation that most people do, but sometimes maybe you would like to take these basic data types and make more useful data types which are useful for your work. So, what you do is for example, I can write something like a record or a structure as it is called, I am not writing in C syntax over here and let us say I want to make a student record, I will say name, student name which is of a character array, array of, I will let say 100 characters of car, then I will say student role number, which can again be an array of let us say 10 characters, this is basically your I, then I may like to say students mark, let us say this is with respect to a particular course, course name. In IIT we have six characters for courses, so let us say I have array of six of car and the same course marks, assignment one, assignment two, it is of type real or float and let us say quiz one, quiz two, n, m, use of type real and then you have a total, which is also of type real. So, we have something which you have seen, which you might have seen in your first in the basic C course that you already did, we can put a set of a sorted elements together, here we have character and total maybe of type individual it is. So, what you have here, role number name which is of type character, see string of characters, student role number which is again a string of characters, course name which is an array of characters again a string of characters, assignment one, assignment two, which is of type real, quiz one, quiz two, n, which is again of type real and total is integer, based on which a grade is given, let us say we also have a grade, which is of type character. So, what I have tried to do is we create a student record with all the information together, we are doing a kind of an organization if you see, where the organization that you are doing for a particular student role number, we keep track of the name, we have the course number here, the assignment, the quizzes that he or she has taken total, that he has got in this particular course, I am doing it for a particular close, let us say and a grade that he is obtained on this course. So, there is one type of data organization, so what have we done, we take the basic building blocks like the integer, character, flow and so on or real for that matter, put them together and make one data structure and what do we want to do is, when I am looking at a particular students information, the entire record is pulled out, so that I can look at assignment marks, quiz marks, and so on, one way of organizing. So, this is called a data structure, next what we are going to do is, this is one part of the problem, where we take these basic building blocks like int, card and flow, put them together and make a record and then you, when you want to pull out a particular person's item, for example, I might have an array of, let me say this is a record of type student or whatever and then I might have an array of, let say in my classes of 1 to 65 of students. So, it is an array of this record of students, then to access a particular element in this, all that I have to do is, look at let say of type student, let me call it stoodar or something like this, this is the type and this is the actual allocation. So, I look at stoodar of let say 25 and it will give me the 25 record in this particular array and I can access all the elements, so very nice idea, putting all a software elements together making a data structure out of it. Today, what we are going to talk about is little bit higher than that, that is what a data structure is all about. We are going to talk about what are called abstract data types and what we are going to do is, now what we are going to do in this particular part of the course is that, not only are we going to do an organization like this, but we are also going to define a set of operations that can be performed on this data structure. So, first thing what we do, we organize the elements in a particular form and then we are going to define a set of operations. For example, you know the, what are the operations that you can perform on it, if you are looking at C for example, you can do addition plus minus division percent. So, now only if you are looking at float, you can do plus minus slash and there are other operations, but this is the minimal set of operations and multiplication. And if you look at character for example, you can you can do a plus where it kind of concatenate and then you have the S T R N, S T R cat, S T R count and various operations that can be performed on character strings, character slash strings, let us say, you know set of operations that have been defined. So, now for example, when you look at these operations plus minus slash and percent, if you look at these operations here which are also used for float and you remember here you can also use a star, person remainder will give you the. So, basically what the compiler knows or what the computer knows for example, is that when you are performing plus and minus, if I say in x and y and I say in z and I say z is equal to x plus y, it automatically knows that the plus operation is performed on operands which are of type integer. Similarly, if I say float u v and float w and I write w is equal to u plus p, clearly it knows that you will be here for a type float and the result is to be stored in w which is also of type float. Now, we are using the same operation plus here and plus here also. So, what we want to do is that we want to add more functionality. I want to add by one data types just like you had integer and float here. Can we add our own data types and give new meaning to these operations? For example, suppose I wanted to do let us say I want to look at matrix multiplication. So, matrix of size two matrices let me say m 1 and m 2. Then I want to define a new matrix let us say I would like to say something like this. Matrix m 1 m 2 and I would like to say matrix m 3 which is the output and I would like to say m 3 is equal to m 1 plus m 2 which is a usual what is the meaning here? Now, the meaning here is that m 3 is the result of the sum of the two matrices and similarly I may like to say m 3 is equal to m 1 minus m 2 m 3 is equal to m 1 transpose something like that transpose of m 1 let me say m 1 transpose. I would like to say transpose of m 1 and similarly I may like to say m 3 is equal to inverse of m 1 and so on. I may like to do a whole lot of operations like this. What have we done here? I would like to focus on these two operations. What is the difference here? Here we saw that plus and minus are operating with respect to integer here float plus and minus are operating with respect to float here. Here plus is operating with respect to character here and here for example, what are we doing here now? Here you are saying now plus and minus are going to operate with respect to matrices. So, basically what we are trying is can we somehow generalize this whole idea of what is an operator? We know that if you look at the string cat and string compare functions what do they do? They are essentially doing some operations on a pair of strings. The pair of strings are given as argument to string cat and it will concatenate two of them and give you the result which is a concatenated string. So, one way of looking at it is it is a function all right, but the function of the procedure is like generalizing what we call the notion of an operator. I have a comparison operation to be performed and we are having a function for it or a procedure. So, already we have procedures which kind of generalize this notion of what an operator should do. So now, instead of using these operators plus minus multiplication division can we have user defined operations? Similarly, the data on which the procedure should operate like I can give my own organization of the data, can I also have a whole lot of user defined operators. So, what is happening is here if I look at it matrix M 1 M 2 M 3. So, I have to specify how this matrix is actually represented. It has to be in a particular representation which is a two dimensional array perhaps, should be the representation of the matrix. But the operations are actually here being performed on arrays and you know that is internally defined by the user defined functions that we have. So, what we want to do is just as you have procedures that can be used to encapsulate functionality, we can define what are called abstract data types that can be used to encapsulate data types. I have already given these two examples. Another example is if you know that in C you have a integer float and car you do not have complex complexes of the fine. For example, you have a number A plus I B and can I represent something like C of 0.5 or 0.5 complex C my type here 0.5 come up 0.5 and can I make the operations of addition, subtraction and division to be mean something different in this particular context. So, basically what we are talking about going a little bit higher level here. We have a mathematical model and an informal algorithm. What do I mean by that? When I say matrix M1 and M2 then when I am talking about addition I have an informal algorithm which tells me how M1 and M2 should be added. When I mean informal here I am more talking about something like you know when you write in English kind of statements what this informal algorithm to add to matrices. Then what we do is from there we go a little bit more formal convert this to what is called an abstract data type. For example, in the matrix you know what the meaning of it and then abstract data type is closer to the higher level language then you write a pseudo language program. What do I mean by a pseudo language program here? You are writing something like an algorithm in a pseudo language program such that if I translate it to a particular higher level language it should work exactly. And what is the correspondence with this abstract data is represented by a data structure and then the operations that are performed on the data structure are written in a higher level language program. So we start with the mathematical model informal algorithm like for example in sets how do you say what is your mathematical model you will say S1 is of this form A, B, C, D, and S2 is of this form C plus C comma D comma E and if I say S1 union S2 is nothing but A comma. So this is what we mean by A, B, C, D and E is what you will get. Whereas if I do S1 intersection S2 it is going to give me C and D. So what have I done here? I have definition of the sets a mathematical model for representing sets and from the elements that I use in the set I know what the type is then I am defining an operation called union I am defining an operation called intersection which operates on these sets. That is what we mean by a mathematical model and an informal algorithm. Then abstract data gets closer to the computer. So now then what we have to do what are the elements in this particular set? What is the type of the elements in the set? For example suppose I had 1, 2, 3, 4 the element type would be of type integer these are elements of type character and then however represent a set I may require a special type of data organization just like we talked about over there and then these operations which operate on the sets now it write functions which will take whatever data organization I have and operate on them and give the result. Then that we do is finally we say how a higher level language how do I translate this whole thing into the higher level language. So I converted to a real data structure like this kind of a data structure over here and then I define a set of operations on this. So finally abstract data type when you look at it it is like it is going to look something like this. So we have let me call it an ADT for matrix let us look at matrix of set at 2 ADT set. So have here some representation of the set how to where how should this set be stored should it be stored in an array or a linked list or whatever then I have a set of operations which are performed on the set like union intersection for example it will take union intersection complement and so on. So these operations are operate on this data and what we normally do is the data is completely the representation of the data is completely hidden from the user. The operations are known and these operations can take arguments what arguments these operations take for example I may say here it takes is argument set S1 and set S2 and intersection is also taking the same argument complement again because subtracting let us say from one to the other set S1 and set S2. So basically it takes is argument sets and then there are operations that are performed on the set. So obviously what is it going to do it is going to operate on the data the way the data is represented each one of these functions is going to hide the whole information here and it is going to operate on the way the data has been represented and finally the result is going to be the union of these sets and what will this be this will again be a type set this will also be a type set. This will also be a type set. So basically these are things that you can do with what are called abstract data types okay. We have a representation here some representation using whatever structures are available in the programming language integer character float for example I have to specify of course is a set of characters is set of integers is set of some other kind of objects that information is given here and then you decide whether you want to use this set is consisting of a set of items we are left with no choice but to say some array or a linked list representation and then we perform a set of operations. So now what do these operations do the operations will look at this representation and perform the operation of union intersection and complement like we said in the mathematical model over here. So we will stop here for now and we will continue with an example on complex in the next class. Thank you.